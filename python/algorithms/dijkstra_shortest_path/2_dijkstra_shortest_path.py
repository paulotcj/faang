#-------------------------------------------------------------------------
class MyGraph:
    #-------------------------------------------------------------------------
    def __init__(self):
        self.data = {}
    #-------------------------------------------------------------------------        
    #-------------------------------------------------------------------------
    def add_vertex(self, node):
        if node not in self.data:
            self.data[node] = []
    #-------------------------------------------------------------------------
    #-------------------------------------------------------------------------
    def add_edge(self, node1, node2):
        self.add_vertex(node1)
        self.add_vertex(node2)
        self.data[node1].append(node2)
        self.data[node2].append(node1)
    #-------------------------------------------------------------------------
    #-------------------------------------------------------------------------
    def print(self):
        sorted_data = dict(sorted(self.data.items()))
        for k, v in sorted_data.items():
            temp_str = ""
            sorted_v = sorted(v)
            for i in sorted_v:
                temp_str += f"{i}, "

            print(f"Node {k} - Connects to: {temp_str}")
    #-------------------------------------------------------------------------
#-------------------------------------------------------------------------
class MyGraph_test:
    #-------------------------------------------------------------------------
    def test(self):

        #      0
        #    /   \
        #   1-----2
        #   |     |
        #   3-----4
        #         |
        #   6-----5
        #
        # 0 -> 1,2
        # 1 -> 0,2,3
        # 2 -> 0,1,4
        # 3 -> 1,4
        # 4 -> 2,3,5
        # 5 -> 4,6
        # 6 -> 5

        g = MyGraph()
        g.add_edge(3, 1)
        g.add_edge(3, 4)
        g.add_edge(4, 2)
        g.add_edge(4, 5)
        g.add_edge(1, 2)
        g.add_edge(1, 0)
        g.add_edge(0, 2)
        g.add_edge(6, 5)


        g.print()
    #-------------------------------------------------------------------------

#-------------------------------------------------------------------------

mg_t = MyGraph_test()
mg_t.test()

